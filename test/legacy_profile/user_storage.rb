#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'profile_types'

module UserStorage
  class Client
    include ::Thrift::Client

    def store(xuser)
      send_store(xuser)
      recv_store()
    end

    def send_store(xuser)
      send_message('store', Store_args, :xuser => xuser)
    end

    def recv_store()
      result = receive_message(Store_result)
      return
    end

    def retrieve(xuid)
      send_retrieve(xuid)
      return recv_retrieve()
    end

    def send_retrieve(xuid)
      send_message('retrieve', Retrieve_args, :xuid => xuid)
    end

    def recv_retrieve()
      result = receive_message(Retrieve_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'retrieve failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_store(seqid, iprot, oprot)
      args = read_args(iprot, Store_args)
      result = Store_result.new()
      @handler.store(args.xuser)
      write_result(result, oprot, 'store', seqid)
    end

    def process_retrieve(seqid, iprot, oprot)
      args = read_args(iprot, Retrieve_args)
      result = Retrieve_result.new()
      result.success = @handler.retrieve(args.xuid)
      write_result(result, oprot, 'retrieve', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Store_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    XUSER = 1

    FIELDS = {
      XUSER => {:type => ::Thrift::Types::STRUCT, :name => 'xuser', :class => UserProfile}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Store_result
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Retrieve_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    XUID = 1

    FIELDS = {
      XUID => {:type => ::Thrift::Types::I32, :name => 'xuid'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Retrieve_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => UserProfile}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

